{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.4"},"colab":{"name":"[Bottom Deeplearning] Perceptron","provenance":[],"collapsed_sections":[]}},"cells":[{"cell_type":"code","metadata":{"id":"7IZ9I_AS0tEB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":436},"executionInfo":{"status":"ok","timestamp":1596617676053,"user_tz":-540,"elapsed":12152,"user":{"displayName":"‍김도윤[ 학부재학 / 산업경영공학부 ]","photoUrl":"","userId":"10791284398836833218"}},"outputId":"f5c897b3-bf56-4237-e04e-c2cee03fbcdb"},"source":["from IPython.display import display\n","import IPython\n","import numpy as np\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import scipy as sp\n","import sklearn as skl\n","%matplotlib notebook\n","%matplotlib inline\n","import tensorflow as tf\n","!pip install mglearn\n","import mglearn as mglearn\n","from tensorflow import keras\n","from tensorflow.keras import datasets, layers, models"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting mglearn\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/65/38/8aced26fce0b2ae82c3c87cd3b6105f38ca6d9d51704ecc44aa54473e6b9/mglearn-0.1.9.tar.gz (540kB)\n","\u001b[K     |████████████████████████████████| 542kB 2.5MB/s \n","\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from mglearn) (1.18.5)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.6/dist-packages (from mglearn) (3.2.2)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.6/dist-packages (from mglearn) (0.22.2.post1)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.6/dist-packages (from mglearn) (1.0.5)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.6/dist-packages (from mglearn) (7.0.0)\n","Requirement already satisfied: cycler in /usr/local/lib/python3.6/dist-packages (from mglearn) (0.10.0)\n","Requirement already satisfied: imageio in /usr/local/lib/python3.6/dist-packages (from mglearn) (2.4.1)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.6/dist-packages (from mglearn) (0.16.0)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->mglearn) (2.4.7)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->mglearn) (1.2.0)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->mglearn) (2.8.1)\n","Requirement already satisfied: scipy>=0.17.0 in /usr/local/lib/python3.6/dist-packages (from scikit-learn->mglearn) (1.4.1)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.6/dist-packages (from pandas->mglearn) (2018.9)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from cycler->mglearn) (1.15.0)\n","Building wheels for collected packages: mglearn\n","  Building wheel for mglearn (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for mglearn: filename=mglearn-0.1.9-py2.py3-none-any.whl size=582638 sha256=838018bf43445b4cbe12f1994d5f8cf8edea641a2227520ba1075d5624f1c6da\n","  Stored in directory: /root/.cache/pip/wheels/eb/a6/ea/a6a3716233fa62fc561259b5cb1e28f79e9ff3592c0adac5f0\n","Successfully built mglearn\n","Installing collected packages: mglearn\n","Successfully installed mglearn-0.1.9\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"kmdX9yn60tEK","colab_type":"code","colab":{}},"source":["def AND(x1,x2):\n","    w1,w2,theta = 0.5,0.5,0.7\n","    tmp= x1*w1 + x2*w2\n","    if tmp <= theta:\n","        return 0\n","    elif tmp > theta:\n","        return 1"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cYr7VZLn0tEQ","colab_type":"code","colab":{},"outputId":"85bf7b6b-8f94-482e-a75b-a6f6f935efa8"},"source":["for i in [0,1]:\n","    for j in [0,1]:\n","        print(\"AND(%d,%d)=\"%(i,j),AND(i,j)) #특정 변수를 print 하고 싶을 때는 \"\"다음에 바로 %() 해줘서 써줘야 함"],"execution_count":null,"outputs":[{"output_type":"stream","text":["AND(0,0)= 0\n","AND(0,1)= 0\n","AND(1,0)= 0\n","AND(1,1)= 1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YoSAd6tq0tEY","colab_type":"code","colab":{},"outputId":"ddcc7bc9-5593-4cc4-fc26-1e4d98c2638d"},"source":["x=np.array([0,1])\n","w= np.array([0.5,0.5])\n","b= -0.7\n","np.sum(x*w)+b"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-0.19999999999999996"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"code","metadata":{"id":"P9LmW6tW0tEe","colab_type":"code","colab":{}},"source":["def NAND(x1,x2):\n","    x=np.array([x1,x2])\n","    w=np.array([-0.5,-0.5])\n","    b=0.7\n","    tmp= np.sum(x*w)+b\n","    \n","    if tmp <=0:\n","        return 0\n","    else :\n","        return 1\n","    \n","def OR(x1,x2):\n","    x=np.array([x1,x2])\n","    w=np.array([0.5,0.5])\n","    b=-0.2\n","    tmp= np.sum(x*w)+b\n","    \n","    if tmp <=0:\n","        return 0\n","    else :\n","        return 1\n","\n","def XOR(x1,x2):\n","    s1=NAND(x1,x2)\n","    s2=OR(x1,x2)\n","    y=AND(s1,s2)\n","    return y"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"I-hWIk3k0tEo","colab_type":"code","colab":{},"outputId":"4b13f502-b2a1-46ee-ed33-eccec6bceb80"},"source":["for i in [0,1]:\n","    for j in [0,1]:\n","        print(\"[%d,%d]\"%(i,j))\n","        print(\"AND(%d,%d)=\"%(i,j),AND(i,j))\n","        print(\"NAND(%d,%d)=\"%(i,j),NAND(i,j))\n","        print(\"OR(%d,%d)=\"%(i,j),OR(i,j))\n","        print(\"XOR(%d,%d)=\"%(i,j),XOR(i,j),\"\\n\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[0,0]\n","AND(0,0)= 0\n","NAND(0,0)= 1\n","OR(0,0)= 0\n","XOR(0,0)= 0 \n","\n","[0,1]\n","AND(0,1)= 0\n","NAND(0,1)= 1\n","OR(0,1)= 1\n","XOR(0,1)= 1 \n","\n","[1,0]\n","AND(1,0)= 0\n","NAND(1,0)= 1\n","OR(1,0)= 1\n","XOR(1,0)= 1 \n","\n","[1,1]\n","AND(1,1)= 1\n","NAND(1,1)= 0\n","OR(1,1)= 1\n","XOR(1,1)= 0 \n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"xlF_stwH0tE0","colab_type":"raw"},"source":[""]}]}